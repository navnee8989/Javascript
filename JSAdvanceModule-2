							Module-2

1.Write the code, one line for each action:

		(a).Create an empty object user.
			const person = {
							name:"John",
							surname:"Smith",
							:shedan,
							}
				
				insert new name into object
				person.name = "pele"

				delete name property into obeject
				delete.name;
				
2.Is array copied?
let fruits = ["Apples", "Pear", "Orange"]; 
// push a new value into the "copy" let
shoppingCart = fruits;
 shoppingCart.push("Banana");
 // what's in fruits?
alert( fruits.length ); 

	output:-4

beacuse of shoppingCart hes stored fruits


3.Map to names
let john = { name: "John", age: 25 }; 
let pete = { name: "Pete", age: 30 }; 
let mary ={ name: "Mary", age: 28 }; 
let users = [ john, pete, mary ]; 
let names = /* ... your
code */ alert( names ); // John, Pete, Mary'


===>let john = { name: "John", age: 25 };
let pete = { name: "Pete", age: 30 };
let mary = { name: "Mary", age: 28 };

let users = [ john, pete, mary ];

let names = users.map(item => item.name);

alert( names ); // John, Pete, Mary


4.Map to objects
let john = { name: "John", surname: "Smith", id: 1 };
 let pete = { name: "Pete",
surname: "Hunt", id: 2 }; 
let mary = { name: "Mary", surname: "Key", id: 3 }; 
let
users = [ john, pete, mary ]; 
let usersMapped = users.map(user => ({
  fullName: `${user.name} ${user.surname}`,
  id: user.id
}));
usersMapped = [
{ fullName: "John Smith", id: 1 },
{ fullName: "Pete Hunt", id: 2 },
{ fullName: "Mary Key", id: 3 }
]
*/ alert( usersMapped[0].id ) // 1 alert( usersMapped[0].fullName ) // John Smith
	


5.function sumSalaries(salaries) {

  let sum = 0;
  for (let salary of Object.values(salaries)) {
    sum += salary;
  }

  return sum; // 650
}

let salaries = {
  "John": 100,
  "Pete": 300,
  "Mary": 250
};

alert( sumSalaries(salaries) ); // 650



6.Destructuring assignment We have an object: Write the Destructuring assignment that
reads

(a)==>Name property into the variable name
b) Yearâ€™s property into the variable age.
c) isAdmin property into the variable isAdmin (false, if no such property)
d) let user = { name: "John", years: 30};

		let user = {
  		name: "John",
 		 years: 30
		};

		let {name, years: age, isAdmin = false} = user;

		alert( name ); // John
		alert( age ); // 30
		alert( isAdmin ); // false


7.Turn the object into JSON and back Turn the user into JSON and then read it back
into another variable.
user = { name: "John Smith", age: 35}


==>let user = {
  name: "John",
  age: 30,

  toString() {
    return `{name: "${this.name}", age: ${this.age}}`;
  }
};

alert(user); // {name: "John", age: 30}


